$array_int = Array.new(10){rand(100)}
#$array_int = [1, 3, 5, 7, 9]
puts $array_int


#Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными.																									
def one
  puts "1. Дан целочисленный массив. Необходимо вывести вначале его элементы с четными индексами, а затем - с нечетными."
  puts $array_int.partition.each_with_index{|v, i| i.even?}
end


#Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ].																									
def two
  puts "2. Дан целочисленный массив. Вывести номер первого из тех его элементов, которые удовлетворяют двойному неравенству: A[0] < A[i] < A[-1]. Если таких элементов нет, то вывести [ ]."
  if $array_int[0] < $array_int[-1]
  	q = $array_int.drop(1)
  	w = $array_int.index {|x| q[0] > x[0]} + 1
  	puts w
  else
  	puts "[]"
  end
end


#Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять.	
#Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять.																									
def three_and_four
  puts "3. Дан целочисленный массив. Преобразовать его, прибавив к четным числам первый элемент. Первый и последний элементы массива не изменять."
  puts "4. Дан целочисленный массив. Преобразовать его, прибавив к нечетным числам последний элемент. Первый и последний элементы массива не изменять."
  z = $array_int.slice(1, $array_int.length-2)
  a = []
  b = []
  puts z.class
  for i in 0..z.length-1
  	if (z[i] %2 == 0)
  	  a = [$array_int[0]] << [z[i] + $array_int.first] << [$array_int.last]
  	else
  	  b = [$array_int[0]] << [z[i] + $array_int.last] << [$array_int.last]
  	end
  end 
  puts a, '-----', b
end


#Дан целочисленный массив. Заменить все положительные элементы на значение минимального.																									
def five
  puts "5. Дан целочисленный массив. Заменить все положительные элементы на значение минимального."
  #for i in 0..$array_int.length-1
   # if $array_int[i] > 0
    #  puts $array_int.map {|i| $array_int[i] = $array_int.min} 
    #end
  #end

end


#Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального. 
def six
  puts "6. Дан целочисленный массив. Заменить все отрицательные элементы на значение минимального."
  #for i in 0..$array_int.length-1
   # if $array_int[i] < 0  
    #  a = $array_int.map {|i| $array_int[i] = $array_int.min}
    #else 
     # a = "нет отрицательных элементов" 
    #end
    #puts a
  #end

end


#Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию. 
def seven
  puts "7. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива влево на одну позицию."
  puts $array_int.reverse.shift($array_int.length - 1).reverse.append($array_int.first)
end


#Дан целочисленный массив. Проверить, образуют ли элементы арифметическую прогрессию. Если да, то вывести разность прогрессии, если нет - вывести nil.
def eight
  puts "8. Дан целочисленный массив. Проверить, образуют ли элементы арифметическую прогрессию. Если да, то вывести разность прогрессии, если нет - вывести nil."
    if ($array_int.first..$array_int.last).step(($array_int.last - $array_int.first) / ($array_int.length - 1)).to_a == $array_int
  	puts ($array_int.last-$array_int.first)/($array_int.length-1)
  else
  	puts nil
  end
end


#Дан целочисленный массив. Найти количество его локальных максимумов. 
#Дан целочисленный массив. Найти максимальный из его локальных максимумов."
def nine_and_ten
  puts "9. Дан целочисленный массив. Найти количество его локальных максимумов."
  z = []
  k = []
  if ($array_int[0] > $array_int[1])
  	z.append(0)
  	k.append($array_int[0])
  end
  for i in 1..$array_int.length - 2
  	if (($array_int[i-1] < $array_int[i]) && ($array_int[i] > $array_int[i+1]))
  		z.append(i)
        k.append($array_int[i])
  	end
  end
  if $array_int[-1] > $array_int[-2]
  	z.append($array_int.size - 1)
  	k.append($array_int[-1])
  end
  puts z.count()
  puts "10. Дан целочисленный массив. Найти максимальный из его локальных максимумов."
  puts k.max()

end


#Дан целочисленный массив. Определить количество участков, на которых его элементы монотонно возрастают. 
def eleven
  puts "11. Дан целочисленный массив. Определить количество участков, на которых его элементы монотонно возрастают."


end


#Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наиболее близок к данному числу. 
def twelve
  puts "12. Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наиболее близок к данному числу."
  arr = Array.new(10){rand()}
  r = rand()
  s = arr.map {|x| (x - r).abs()}.min()
  puts s
end


#Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент.
def thirteen
  puts "13. Дан целочисленный массив. Преобразовать его, вставив перед каждым положительным элементом нулевой элемент."
  a = []
  for i in 0..$array_int.length - 1
  	if ($array_int[i] > 0)
  	  a = a << 0 << $array_int[i]
  	end
  end
  puts a
end


#Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент. 
def fourteen
  puts "14. Дан целочисленный массив. Преобразовать его, вставив после каждого положительного элемента нулевой элемент."
  a = []
  for i in 0..$array_int.length - 1
  	if ($array_int[i] > 0)
  	  a = a << $array_int[i] << 0
  	end
  end
  puts a
end


#Дан целочисленный массив. Упорядочить его по возрастанию. 
def fifteen
  puts "15. Дан целочисленный массив. Упорядочить его по возрастанию."
  puts $array_int.sort()
end


#Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность. 
def sixteen
  puts "16. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют убывающую последовательность."
  a = $array_int.map.with_index.sort.reverse.map(&:last)
  puts a
end


#Дан целочисленный массив. Найти индекс минимального элемента. 
def seventeen
  puts "17. Дан целочисленный массив. Найти индекс минимального элемента."
  a = $array_int.index($array_int.min)
  puts a
end


#Дан целочисленный массив. Найти индекс первого минимального элемента.
def eighteen 
  puts "18. Дан целочисленный массив. Найти индекс первого минимального элемента."
  a = $array_int.map.with_index.sort.map(&:last).first()
end


#Дан целочисленный массив. Найти индекс последнего минимального элемента. 
def nineteen 
  puts "19. Дан целочисленный массив. Найти индекс последнего минимального элемента."
  a = $array_int.rindex($array_int.min)
  puts a
end


#Дан целочисленный массив. Найти количество минимальных элементов. 
def twenty
  puts "20. Дан целочисленный массив. Найти количество минимальных элементов." 
  a = $array_int.count($array_int.min)
  puts a	
end


#Дан целочисленный массив. Найти минимальный четный элемент. 
def twenty_one
  puts "21. Дан целочисленный массив. Найти минимальный четный элемент."
  puts $array_int.find_all(&:even?).min
  
end
	

#Дан целочисленный массив. Найти максимальный четный элемент.
def twenty_two
  puts "22. Дан целочисленный массив. Найти максимальный четный элемент."
  puts $array_int.find_all(&:even?).max
end  


#Дан целочисленный массив. Найти минимальный положительный элемент. 
def twenty_three
  puts "23. Дан целочисленный массив. Найти минимальный положительный элемент."
  puts $array_int.select {|x| x > 0}.min
end


#Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале. 
def twenty_four
  puts "24. Дан целочисленный массив и интервал a..b. Найти минимальный из элементов в этом интервале."
  puts $array_int.select {|x| x > 10 && x < 30}.min
end


#Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным. 
def twenty_five
  puts "25. Дан целочисленный массив. Найти количество элементов, расположенных перед первым минимальным."
  i = $array_int.index($array_int.min)
  puts i
  puts $array_int[0..i-1].count
end


#Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального. 
def twenty_six
  puts "26. Дан целочисленный массив. Найти количество элементов, расположенных после первого максимального."
  i = $array_int.index($array_int.max)
  puts i
  puts $array_int[i+1..$array_int.length-1].count
end


#Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным. 
def twenty_seven
  puts "27. Дан целочисленный массив. Найти количество элементов, расположенных перед последним максимальным."
  i = $array_int.rindex($array_int.max)
  puts $array_int[0..i].count
end


#Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального. 
def twenty_eight
  puts "28. Дан целочисленный массив. Найти количество элементов, расположенных после последнего максимального."
  i = $array_int.rindex($array_int.max)
  puts $array_int[i+1..$array_int.length-1].count  
end


#Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента. 
def twenty_nine
  puts "29. Дан целочисленный массив. Найти индекс первого экстремального (то есть минимального или максимального) элемента."
  puts $array_int.index($array_int.min || $array_int.max)
end


#Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным. 
def thirty
  puts "30. Дан целочисленный массив. Найти количество элементов, между первым и последним минимальным."
  a = $array_int.index($array_int.min)
  b = $array_int.rindex($array_int.min)
  puts $array_int[a+1..b].count
end


#Дан целочисленный массив. Найти два наибольших элемента. 
def thirty_one
  puts "31. Дан целочисленный массив. Найти два наибольших элемента."
  puts $array_int.sort.reverse.slice(0..1)
end


#Дан целочисленный массив. Найти максимальное количество подряд идущих минимальных элементов. 
def thirty_two
  puts "32. Дан целочисленный массив. Найти максимальное количество подряд идущих минимальных элементов."
  

end


#Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные. 
def thirty_three
  puts "33. Дан целочисленный массив. Вывести вначале все его четные элементы, а затем - нечетные."
  puts $array_int.select {|x| x %2 == 0 } << $array_int.select {|x| x %2 == 1}
end


#Дан целочисленный массив. Проверить, чередуются ли в нем четные и нечетные числа. 
def thirty_four
  puts "34. Дан целочисленный массив. Проверить, чередуются ли в нем четные и нечетные числа."
  for i in 1..$array_int.length - 1
    if (($array_int[i-1] %2 == 0) && ($array_int[i] %2 == 1))
  	  puts "yes"
    elsif (($array_int[i-1] %2 == 1) && ($array_int[i] %2 == 0))
  	  puts "yes"
    else
  	  puts "no"
    end
  end
end


#Дано вещественное число R и массив вещественных чисел. Найти два элемента массива, сумма которых наиболее близка к данному числу. 
def thirty_five
  puts "35. Дано вещественное число R и массив вещественных чисел. Найти два элемента массива, сумма которых наиболее близка к данному числу."
  arr = Array.new(10){rand()}
  r = rand()
  #s = arr.select {|x, y| ((x + y) - r).abs()}.min
  #puts s
end


#Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз.
def thirty_six
  puts "36. Дан целочисленный массив. Удалить все элементы, встречающиеся менее двух раз."
  puts $array_int.delete_if {|x| $array_int.count(x) < 2}
  a = [1, 1, 2, 3, 4, 4]
  puts a.delete_if {|x| a.count(x) < 2}
end


#Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза. 
def thirty_seven
  puts "37. Дан целочисленный массив. Удалить все элементы, встречающиеся ровно два раза."
  puts $array_int.delete_if {|x| $array_int.count(x) == 2}
end


#Дан целочисленный массив. Найти среднее арифметическое модулей его элементов. 
def thirty_eight
  puts "38. Дан целочисленный массив. Найти среднее арифметическое модулей его элементов."
  a = $array_int.sum {|x| x.abs}.to_f 
  b = $array_int.count.to_f
  puts a / b 
end


#Дано целое число. Найти сумму его цифр. 
def thirty_nine
  puts "39. Дано целое число. Найти сумму его цифр."
  a = rand(1000)
  arr = a.to_s.chars.map(&:to_i).sum
  puts a, arr
end


#Дан целочисленный массив. Возвести в квадрат отрицательные элементы и в третью степень - положительные. Нулевые элементы - не изменять. 
def fourty
  puts "40. Дан целочисленный массив. Возвести в квадрат отрицательные элементы и в третью степень - положительные. Нулевые элементы - не изменять."
  puts $array_int.map {|x|
    if x < 0
      x = x * x
    elsif x > 0
      x = x * x * x
    else
      x
    end}
end


#Дан дипапазон a..b. Получить массив из чисел, расположенных в этом диапазоне (исключая сами эти числа), в порядке их убывания, а также размер этого массива. 
def fourty_one
  puts "41. Дан дипапазон a..b. Получить массив из чисел, расположенных в этом диапазоне (исключая сами эти числа), в порядке их убывания, а также размер этого массива."
  z = (12..69)
  a = $array_int.select {|x| z.include?(x)}.sort.reverse
  b = a.size
  puts a, "-----", b
end


#Дано число А и натуральное число N. Найти результат следующего выражения 1 - А + А*2 - А*3 + … + ((-1)**N)*А*N. 
def fourty_two
  puts "42. Дано число А и натуральное число N. Найти результат следующего выражения 1 - А + А*2 - А*3 + … + ((-1)**N)*А*N."
  a = 3
  n = 6
  puts (a-1..n-1).inject(1 - a + a*2 - a*3) {|x, y| x + ((-1)**y)*a*y}
end


#Дано натуральное число N. Если N - нечетное, то найти произведение 1*3*…*N; если N - четное, то найти произведение 2*4*…*N. 
def fourty_three
  puts "43. Дано натуральное число N. Если N - нечетное, то найти произведение 1*3*…*N; если N - четное, то найти произведение 2*4*…*N."
  n = 9
  puts n.step(1, -2).reduce(:*)
end


#Дан целочисленный массив. Найти все четные элементы. 
def fourty_four
  puts "44. Дан целочисленный массив. Найти все четные элементы."
  puts $array_int.find_all {|x| x.even?}
end


#Дан целочисленный массив. Найти все нечетные элементы. 
def fourty_five
  puts "45. Дан целочисленный массив. Найти все нечетные элементы."
  puts $array_int.find_all {|x| x.odd?}
end


#Дан целочисленный массив и число К. Если существует элемент, меньший К, то вывести true; в противном случае вывести false. 
def fourty_six
  puts "46. Дан целочисленный массив и число К. Если существует элемент, меньший К, то вывести true; в противном случае вывести false."
  k = 16
  puts $array_int.any? {|x| x < k}
end


#Дан целочисленный массив и число К. Если все элементы массива меньше К, то вывести true; в противном случае вывести false. 
def fourty_seven
  puts "47. Дан целочисленный массив и число К. Если все элементы массива меньше К, то вывести true; в противном случае вывести false."
  k = 26
  puts $array_int.all? {|x| x < k}
end


#Дан целочисленный массив и число К. Вывести количество элементов, меньших К. 
def fourty_eight
  puts "48. Дан целочисленный массив и число К. Вывести количество элементов, меньших К."
  k = 65
  puts $array_int.count{|x| x < k}
end


#Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К. 
def fourty_nine
  puts "49. Дан целочисленный массив и число К. Вывести индекс последнего элемента, меньшего К."
  k = 48
  a = (1...$array_int.length).sort_by {|x| $array_int[x] < k}
  b = a.last
  puts a, "-----", b

end


#Дан целочисленный массив. Вывести индексы элементов, которые меньше своего правого соседа, и количество таких чисел. 
def fifty
  puts "50. Дан целочисленный массив. Вывести индексы элементов, которые меньше своего правого соседа, и количество таких чисел."
  a = (1...$array_int.length).sort_by {|x| $array_int[x] < $array_int[x-1]}
  puts a, "-----", a.size
end


#Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными. 
def fifty_one
  puts "51. Дан целочисленный массив. Необходимо вывести вначале его элементы с нечетными индексами, а затем - четными."
  puts $array_int.partition.each_with_index{|v, i| i.odd?}
end


#Дан целочисленный массив. Заменить все положительные элементы на значение максимального. 
def fifty_two
  puts "52. Дан целочисленный массив. Заменить все положительные элементы на значение максимального."
  if $array_int.any? {|x| x > 0}  
  puts $array_int.map{|x| x = $array_int.max}
  end
end


#Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию. 
def fifty_three
  puts "53. Дан целочисленный массив. Осуществить циклический сдвиг элементов массива вправо на одну позицию."
  puts $array_int.unshift($array_int.pop)
end


#Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наименее близок к данному числу.  
def fifty_four
  puts "54. Дано вещественное число R и массив вещественных чисел. Найти элемент массива, который наименее близок к данному числу."
  arr = Array.new(10){rand()}
  r = rand()
  s = arr.map {|x| (x - r).abs()}.max()
  puts s
end


#Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент. 
def fifty_five
  puts "55. Дан целочисленный массив. Преобразовать его, вставив перед каждым отрицательным элементом нулевой элемент."
  a = []
  for i in 0..$array_int.length - 1
  	if ($array_int[i] < 0)
  	  a = a << 0 << $array_int[i]
  	else 
  	  a = a << $array_int[i]
  	end
  end
  puts a
end


#Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент. 
def fifty_six
  puts "56. Дан целочисленный массив. Преобразовать его, вставив после каждого отрицательного элемента нулевой элемент."
  a = []
  for i in 0..$array_int.length - 1
  	if ($array_int[i] < 0)
  	  a = a << $array_int[i] << 0
  	else 
  	  a = a << $array_int[i]
  	end
  end
  puts a
end


#Дан целочисленный массив. Найти количество четных элементов. 
def fifty_seven
  puts "57. Дан целочисленный массив. Найти количество четных элементов."
  puts $array_int.count {|x| x.even?}
end


#Дан целочисленный массив. Найти количество нечетных элементов. 
def fifty_eight
  puts "58. Дан целочисленный массив. Найти количество нечетных элементов."
  puts $array_int.count {|x| x.odd?}
end


#Дан целочисленный массив. Упорядочить его по убыванию. 
def fifty_nine
  puts "59. Дан целочисленный массив. Упорядочить его по убыванию."
  puts $array_int.sort.reverse
end


#Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность. 
def sixty
  puts "60. Дан целочисленный массив. Вывести индексы массива в том порядке, в котором соответствующие им элементы образуют возрастающую последовательность."
  a = $array_int.map.with_index.sort.map(&:last)
  puts a
end


#Дан целочисленный массив. Найти индекс максимального элемента. 
def sixty_one
  puts "61. Дан целочисленный массив. Найти индекс максимального элемента."
  a = $array_int.index($array_int.max)
  puts a
end 


#Дан целочисленный массив. Найти индекс последнего максимального элемента. 
def sixty_two
  puts "62. Дан целочисленный массив. Найти индекс последнего максимального элемента."
  a = $array_int.rindex($array_int.max)
  puts a
end


#Дан целочисленный массив. Найти количество максимальных элементов.
def sixty_three
  puts "63. Дан целочисленный массив. Найти количество максимальных элементов."
  a = $array_int.count($array_int.max)
  puts a
end 


#Дан целочисленный массив. Найти минимальный нечетный элемент. 
def sixty_four
  puts "64. Дан целочисленный массив. Найти минимальный нечетный элемент."
  puts $array_int.find_all(&:odd?).min
end


#Дан целочисленный массив. Найти максимальный нечетный элемент. 
def sixty_five
  puts "65. Дан целочисленный массив. Найти максимальный нечетный элемент."
  puts $array_int.find_all(&:odd?).max
end


#Дан целочисленный массив. Найти максимальный отрицательный элемент. 
def sixty_six
  puts "66.Дан целочисленный массив. Найти максимальный отрицательный элемент."
  puts $array_int.select {|x| x < 0}.max
end


#Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале. 
def sixty_seven
  puts "67. Дан целочисленный массив и интервал a..b. Найти максимальный из элементов в этом интервале."
  puts $array_int.select {|x| x > 10 && x < 30}.max
end


#Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным. 
def sixty_eight
  puts "68. Дан целочисленный массив. Найти количество элементов, расположенных перед первым максимальным."
  i = $array_int.index($array_int.max)
  puts i
  s = $array_int[0..i].count -1 
  puts s
end


#Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального . 
def sixty_nine
  puts "69. Дан целочисленный массив. Найти количество элементов, расположенных после первого минимального ."
  i = $array_int.index($array_int.min)
  puts i
  puts $array_int[i+1..$array_int.length-1].count
end


#Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным. 
def seventy
  puts "70. Дан целочисленный массив. Найти количество элементов, расположенных перед последним минимальным."
  i = $array_int.rindex($array_int.min)
  puts $array_int[0..i].count
end


#Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального . 
def seventy_one
  puts "71. Дан целочисленный массив. Найти количество элементов, расположенных после последнего минимального ."
  i = $array_int.rindex($array_int.min)
  puts $array_int[i+1..$array_int.length-1].count  
end


#Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента. 
def seventy_two
  puts "72. Дан целочисленный массив. Найти индекс последнего экстремального (то есть минимального или максимального) элемента."
  puts $array_int.rindex($array_int.min || $array_int.max)
end


#Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным. 
def seventy_three
  puts "73. Дан целочисленный массив. Найти количество элементов, между первым и последним максимальным. "
  a = $array_int.index($array_int.max)
  b = $array_int.rindex($array_int.max)
  puts $array_int[a+1..b].count
end


#Дан целочисленный массив. Найти два наименьших элемента. 
def seventy_four
  puts "Дан целочисленный массив. Найти два наименьших элемента."
  puts $array_int.sort.slice(0..1)
end


puts one, two, three_and_four, five, six, seven, eight, nine_and_ten, eleven, twelve, thirteen, fourteen, fifteen, sixteen, seventeen, eighteen, nineteen, twenty
puts twenty_one, twenty_two, twenty_three, twenty_four, twenty_five, twenty_six, twenty_seven, twenty_eight, twenty_nine, thirty, thirty_one, thirty_two
puts thirty_three, thirty_four, thirty_five, thirty_six, thirty_seven, thirty_eight, thirty_nine, fourty, fourty_one, fourty_two, fourty_three, fourty_four
puts fourty_five, fourty_six, fourty_seven, fourty_eight, fourty_nine, fifty, fifty_one, fifty_two, fifty_three,fifty_four, fifty_five, fifty_six, fifty_seven, fifty_eight
puts fifty_nine, sixty, sixty_one, sixty_two, sixty_three, sixty_four, sixty_five, sixty_six, sixty_seven, sixty_eight, sixty_nine, seventy, seventy_one, seventy_two
puts seventy_three, seventy_four